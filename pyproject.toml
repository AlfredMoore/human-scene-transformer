[project]
# Project metadata. Available keys are documented at:
# https://packaging.python.org/en/latest/specifications/declaring-project-metadata
name = "human_scene_transformer"
description = "Human Scene Transformer: Trajectory Prediction in Human-Centered Environments."
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [
  {name = "Tim Salzmann", email="Tim.Salzmann@tum.de"},
  {name = "Lewis Chiang"},
  {name = "Markus Ryll"},
  {name = "Dorsa Sadigh"},
  {name = "Carolina Parada"},
  {name = "Alex Bewley", email="bewley@google.com"}]
classifiers = [  # List of https://pypi.org/classifiers/
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Science/Research",
]
keywords = []

# pip dependencies of the project
# Installed locally with `pip install -e .`
dependencies = [
  "absl-py>=1.4",
  "gin-config>=0.5",
  "numpy>=1.24",
  "open3d>=0.17",
  "pandas>=2.0",
  "scipy>=1.10",
  "tensorflow>=2.13",
  "tensorflow-datasets>=4.9",
  "tensorflow-graphics>=2021.12",
  "tensorflow-probability>=0.21",
  "tf-models-official>=2.5",
  "tqdm>=4.66"
]

# `version` is automatically set by flit to use `human_scene_transformer.__version__`
dynamic = ["version"]

[project.urls]
homepage = "https://human-scene-transformer.github.io/"
repository = "https://github.com/google-research/human-scene-transformer"
changelog = "https://github.com/google-research/human-scene-transformer/blob/main/CHANGELOG.md"
# documentation = ""

[project.optional-dependencies]
# Development deps (unittest, linting, formating,...)
# Installed through `pip install -e .[dev]`
dev = [
    "pytest",
    "pytest-xdist",
    "pylint>=2.6.0",
    "pyink",
]

[tool.pyink]
# Formatting configuration to follow Google style-guide
line-length = 80
preview = true
pyink-indentation = 2
pyink-use-majority-quotes = true

[build-system]
# Build system specify which backend is used to build/install the project (flit,
# poetry, setuptools,...). All backends are supported by `pip install`
requires = ["flit_core >=3.8,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.sdist]
# Flit specific options (files to exclude from the PyPI package).
# If using another build backend (setuptools, poetry), you can remove this
# section.
exclude = [
  # Do not release tests files on PyPI
  "**/*_test.py",
]
